---
interface Props {
  title?: string
  url?: string
  content?: string
  imageUrl?: string
  imageAlt?: string
  showImage?: boolean
}

const { 
  title = "Terminal", 
  url = "localhost:5678", 
  content = "n8n workflow",
  imageUrl,
  imageAlt = "Screenshot",
  showImage = false
} = Astro.props

// Determinar si mostrar imagen o texto
const shouldShowImage = showImage && imageUrl
---

<div class="mac-mock">
  <div class="mac-screen">
    <!-- Mac Screen Frame -->
    <div class="mac-frame">
      <!-- Mac Screen Header -->
      <div class="mac-header">
        <div class="mac-controls">
          <div class="mac-control close"></div>
          <div class="mac-control minimize"></div>
          <div class="mac-control maximize"></div>
        </div>
        <div class="mac-title">
          {title}
        </div>
        <div class="mac-url">
          {url}
        </div>
      </div>
      
      <!-- Mac Screen Content -->
      <div class="mac-content">
        {showImage && imageUrl ? (
          <img 
            src={`https://pub-3fe6c29d6d0641f685d29df34d3184be.r2.dev/${imageUrl} `} 
            alt={imageAlt}
            class="mac-image"
          />
        ) : (
          <pre class="mac-text">{content}</pre>
        )}
      </div>
    </div>
  </div>
</div>

<style>
  .mac-mock {
    display: flex;
    justify-content: center;
    margin: 2rem 0;
    perspective: 1000px;
  }

  .mac-screen {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }

  .mac-screen:hover {
    transform: rotateX(0deg) rotateY(0deg) scale(1.05);
  }

  .mac-screen:hover .mac-frame {
    box-shadow: 
      0 40px 80px rgba(0, 0, 0, 0.5),
      0 0 0 1px rgba(255, 255, 255, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.3),
      inset 0 -1px 0 rgba(0, 0, 0, 0.3);
  }

  .mac-frame {
    background: linear-gradient(145deg, #2c2c2e, #1c1c1e);
    border-radius: 20px 20px 8px 8px;
    box-shadow: 
      0 30px 60px rgba(0, 0, 0, 0.4),
      0 0 0 1px rgba(255, 255, 255, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.25),
      inset 0 -1px 0 rgba(0, 0, 0, 0.2);
    position: relative;
    padding: 12px;
    width: 420px;
    height: 320px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  @media (max-width: 768px) {
    .mac-frame {
      width: 100%;
    }
  }

  .mac-frame::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #feca57, #ff6b6b);
    border-radius: 23px 23px 11px 11px;
    z-index: -1;
    opacity: 0.8;
    filter: blur(12px);
    animation: glow 3s ease-in-out infinite alternate;
  }

  .mac-header {
    background: linear-gradient(180deg, #f5f5f7, #e8e8ed);
    border-radius: 12px 12px 0 0;
    height: 50px;
    padding: 12px 16px;
    display: flex;
    align-items: center;
    gap: 12px;
    position: relative;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .mac-controls {
    display: flex;
    gap: 8px;
  }

  .mac-control {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    position: relative;
  }

  .mac-control.close {
    background: #ff5f57;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.3);
  }

  .mac-control.minimize {
    background: #ffbd2e;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.3);
  }
  .mac-content .mac-image {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    object-fit: cover;
    scale: 1.5;
    border-radius: 0 0 12px 12px;
    animation: fadeIn 1s ease-in-out;
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.3);
  }

  .mac-control.maximize {
    background: #28ca42;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.3);
  }

  .mac-title {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    font-size: 14px;
    font-weight: 500;
    color: #1d1d1f;
    flex: 1;
  }

  .mac-url {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    font-size: 12px;
    color: #6e6e73;
    background: rgba(0, 0, 0, 0.05);
    padding: 4px 8px;
    border-radius: 6px;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }

  .mac-content {
    background: linear-gradient(135deg, #1a1a1a, #2d2d2d);
    border-radius: 0 0 12px 12px;
    height: 250px;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .mac-content::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  }

  .mac-text {
    font-family: 'JetBrains Mono', 'Fira Code', 'Monaco', 'Consolas', monospace;
    font-size: 13px;
    line-height: 1.6;
    color: #e8e8e8;
    margin: 0;
    white-space: pre-wrap;
    word-wrap: break-word;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7);
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px;
    box-sizing: border-box;
  }

  /* Terminal specific styles */
  .mac-text:has-text("$") {
    color: #00d4aa;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .mac-frame {
      min-width: 90vw;
      min-height: 300px;
    }
    
    .mac-text {
      font-size: 11px;
    }
    
    .mac-screen {
      transform: none;
    }
    
    .mac-screen:hover {
      transform: scale(1.01);
    }
  }

  /* Animation for content */
  .mac-text {
    animation: typewriter 2s ease-in-out;
  }

  @keyframes typewriter {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes glow {
    from {
      opacity: 0.6;
      filter: blur(12px);
    }
    to {
      opacity: 0.9;
      filter: blur(8px);
    }
  }

  /* Glow effect */
  .mac-frame::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 20px 20px 8px 8px;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .mac-screen:hover .mac-frame::after {
    opacity: 1;
  }

  /* Dark theme adjustments */
  :root[data-theme="slack-dark"] .mac-frame {
    background: linear-gradient(145deg, #1a1a1a, #0d0d0d);
    box-shadow: 
      0 30px 60px rgba(0, 0, 0, 0.6),
      0 0 0 1px rgba(255, 255, 255, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.1),
      inset 0 -1px 0 rgba(0, 0, 0, 0.4);
  }

  :root[data-theme="slack-dark"] .mac-content {
    background: linear-gradient(135deg, #0f0f0f, #1a1a1a);
  }

  :root[data-theme="slack-dark"] .mac-text {
    color: #f0f0f0;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
  }

  :root[data-theme="slack-dark"] .mac-text:has-text("$") {
    color: #00ff88;
  }

  :root[data-theme="slack-dark"] .mac-frame::before {
    opacity: 0.9;
    filter: blur(15px);
  }

  /* Light theme adjustments */
  :root[data-theme="slack-ochin"] .mac-frame {
    background: linear-gradient(145deg, #f8f8f8, #e8e8e8);
    box-shadow: 
      0 30px 60px rgba(0, 0, 0, 0.2),
      0 0 0 1px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.8),
      inset 0 -1px 0 rgba(0, 0, 0, 0.1);
  }

  :root[data-theme="slack-ochin"] .mac-content {
    background: linear-gradient(135deg, #f5f5f5, #e8e8e8);
  }

  :root[data-theme="slack-ochin"] .mac-text {
    color: #2a2a2a;
    text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
  }

  :root[data-theme="slack-ochin"] .mac-text:has-text("$") {
    color: #0066cc;
  }

  :root[data-theme="slack-ochin"] .mac-header {
    background: linear-gradient(180deg, #ffffff, #f0f0f0);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }
</style>
